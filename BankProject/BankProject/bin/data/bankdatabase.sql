CONNECT sys AS sysdba;

-- Drop existing tables
DROP TABLE TRANSACTION;
DROP TABLE ACCOUNT;
DROP TABLE CUSTOMER;

-- Create new user and grant privileges
CREATE USER bankdb IDENTIFIED BY bankdatabase;
GRANT ALL PRIVILEGES TO bankdb;


-- Create ACCOUNT table
CREATE TABLE ACCOUNT (
    ACCOUNT_NUMBER NUMBER PRIMARY KEY,
    CUSTOMER_NUMBER NUMBER,
    ACCOUNT_TYPE VARCHAR2(20),
    OPENED_DATE DATE,
    BALANCE NUMBER(10,2),
    FREE_TRANSACTION_LIMIT NUMBER,
    TRANSACTION_FEE NUMBER,
    ANNUAL_INTEREST_RATE NUMBER,
    ANNUAL_GAIN NUMBER
);

CREATE TABLE SAVINGS_ACCOUNT (
    ACCOUNT_NUMBER NUMBER PRIMARY KEY,
    CUSTOMER_NUMBER NUMBER,
    ACCOUNT_TYPE VARCHAR2(20),
    OPENED_DATE DATE,
    BALANCE NUMBER(10,2),
    ANNUAL_INTEREST_RATE NUMBER,
    ANNUAL_GAIN NUMBER
);
 
CREATE TABLE CHECKING_ACCOUNT (
    ACCOUNT_NUMBER NUMBER PRIMARY KEY,
    CUSTOMER_NUMBER NUMBER,
    ACCOUNT_TYPE VARCHAR2(20),
    OPENED_DATE DATE,
    BALANCE NUMBER(10,2),
    FREE_TRANSACTION_LIMIT NUMBER,
    TRANSACTION_FEE NUMBER
);

-- Create CUSTOMER table
CREATE TABLE CUSTOMER (
    CUSTOMER_NUMBER NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50),
    PIN VARCHAR2(4),
    EMAIL VARCHAR2(100),
    PHONE_NUMBER VARCHAR2(20),
    CONSTRAINT CHK_EMAIL_FORMAT CHECK (REGEXP_LIKE(EMAIL, '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$')),
    CONSTRAINT CHK_PIN_LENGTH CHECK (LENGTH(PIN) = 4)
);

-- Create TRANSACTION table
CREATE TABLE TRANSACTION (
    TRANSACTION_NUMBER NUMBER PRIMARY KEY,
    DESCRIPTION VARCHAR2(255),
    TRANSACTION_DATE DATE,
    TRANSACTION_TYPE VARCHAR2(20),
    AMOUNT NUMBER(10,2),
    ACCOUNT_NUMBER NUMBER,
    CONSTRAINT FK_TRANSACTION_ACCOUNT FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT(ACCOUNT_NUMBER),
    CONSTRAINT CHK_TRANSACTION_TYPE CHECK (TRANSACTION_TYPE IN ('DEPOSIT', 'WITHDRAW', 'TRANSFER'))
);

-- add table constraints
ALTER TABLE ACCOUNT
    ADD CONSTRAINT FK_CUSTOMER FOREIGN KEY (CUSTOMER_NUMBER) REFERENCES CUSTOMER(CUSTOMER_NUMBER);

ALTER TABLE ACCOUNT    
    ADD CONSTRAINT CHK_BALANCE CHECK (BALANCE >= 0);

-- referential to transaction
ALTER TABLE TRANSACTION
    ADD CONSTRAINT FK_ACCOUNT FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES ACCOUNT(ACCOUNT_NUMBER);
-- Adding foreign key constraints for SAVING_ACCOUNT table
ALTER TABLE SAVING_ACCOUNT
ADD CONSTRAINT FK_SAVING_CUSTOMER FOREIGN KEY (CUSTOMER_NUMBER) REFERENCES CUSTOMER(CUSTOMER_NUMBER);
-- Adding foreign key constraints for CHECKING_ACCOUNT table
ALTER TABLE CHECKING_ACCOUNT
ADD CONSTRAINT FK_CHECKING_CUSTOMER FOREIGN KEY (CUSTOMER_NUMBER) REFERENCES CUSTOMER(CUSTOMER_NUMBER); 
    

-- Insert data into CUSTOMER table
INSERT INTO CUSTOMER VALUES (1, 'Viet', 'THAI', '1234', 'viet.nam@example.com', '438-555-1234');
INSERT INTO CUSTOMER VALUES (2, 'Boy', 'YOUNG', '5678', 'yogn.boyy@example.com', '514-555-5678');
INSERT INTO CUSTOMER VALUES (3, 'YAS', 'SER', '9876', 'ya.w2345@example.com', '438-555-9876');
INSERT INTO CUSTOMER VALUES (4, 'Has', 'Numbers', '4321', 'emwt.o23@example.com', '514-555-4321');
INSERT INTO CUSTOMER VALUES (5, 'Fifth', 'Customer', '8765', 'has.c4@example.com', '514-555-8765');

-- Insert data into ACCOUNT table
INSERT INTO ACCOUNT VALUES (1, 1, 'CHECKING', TO_DATE('2023-11-05', 'YYYY-MM-DD'), 1000, 10, 1.5, NULL, NULL);
INSERT INTO ACCOUNT VALUES (2, 2, 'SAVING', TO_DATE('2023-11-15', 'YYYY-MM-DD'), 5000, NULL, NULL, 0.02, 100);
INSERT INTO ACCOUNT VALUES (3, 3, 'CHECKING', TO_DATE('2023-11-05', 'YYYY-MM-DD'), 200, 5, 1.0, NULL, NULL);
INSERT INTO ACCOUNT VALUES (4, 4, 'SAVING', TO_DATE('2023-11-12', 'YYYY-MM-DD'), 3000, NULL, NULL, 0.01, 50);
INSERT INTO ACCOUNT VALUES (5, 5, 'CHECKING', TO_DATE('2023-11-15', 'YYYY-MM-DD'), 10000, 15, 2.0, NULL, NULL);
-- Insert data into checking and savings account table
INSERT INTO SAVINGS_ACCOUNT VALUES (2, 2, 'SAVINGS', TO_DATE('2023-11-15', 'YYYY-MM-DD'), 5000, 0.02, 100);
INSERT INTO CHECKING_ACCOUNT VALUES (3, 3, 'CHECKING', TO_DATE('2023-11-05', 'YYYY-MM-DD'), 200, 5, 1.0);

-- Insert data into TRANSACTION table
INSERT INTO TRANSACTION VALUES (1, 'Deposit to 5', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 'DEPOSIT', 500, 1);
INSERT INTO TRANSACTION VALUES (2, 'Withdraw from 3', TO_DATE('2023-12-04', 'YYYY-MM-DD'), 'WITHDRAW', 200, 2);
INSERT INTO TRANSACTION VALUES (3, 'Transfer to 1', TO_DATE('2023-12-08', 'YYYY-MM-DD'), 'TRANSFER', 50, 3);
INSERT INTO TRANSACTION VALUES (4, 'Deposit to 2', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'DEPOSIT', 1000, 4);
INSERT INTO TRANSACTION VALUES (5, 'Withdraw from 4', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'WITHDRAW', 300, 5);
